@model JewelryMaking.Models.StringingMaterialEdit

@{
    ViewBag.Title = "Edit";
}
<style>
    body {
        background-image: url('../../Content/Assets/chain1.jpg');
        background-size: cover;
        background-repeat: no-repeat;
    }

    .body-content {
        background-color: white;
        min-width: 500px;
        max-width: 900px;
    }
</style>

<h2>Edit Stringing Material</h2>


@using (Html.BeginForm("Edit", "StringingMaterial", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <form>
        <h4>Stringing Material Edit Menu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StringingMaterialId)

        @*<div class="form-group row">
                @Html.LabelFor(model => model.StringingMaterialId, htmlAttributes: new { @class = "col-form-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.StringingMaterialId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StringingMaterialId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group row">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LocationId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.SourceId, htmlAttributes: new { @class = "col-form-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.SourceId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SourceId, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="input-group mb-3">
                <div class="input-group-prepend">
                    <span class="input-group-text">Upload</span>
                </div>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="inputGroupFile01">
                    <label class="custom-file-label" for="inputGroupFile01">Choose file</label>

                </div>
            </div>*@

        <div class="form-group row">
           <div class="col-md-4"></div>
            <div class="col-md-8">
                <input type="submit" value="Save" class="btn btn-chng" />

            </div>
        </div>
    </form>
}

<div>
    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-black" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
